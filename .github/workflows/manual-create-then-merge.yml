name: Manual Create + Auto Merge Test

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Target version for hotfix (e.g., v0.1.0)'
        required: true
        type: string
        default: 'v0.1.0'
      hotfix-suffix:
        description: 'Hotfix suffix (e.g., hotfix.1)'
        required: true
        default: 'hotfix.1'
        type: string

permissions: write-all

jobs:
  manual-create-and-merge:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT || github.token }}
          
      - name: Setup environment
        run: |
          echo "üõ†Ô∏è Setting up environment..."
          git config user.name "Test Bot"
          git config user.email "test@example.com"
          
      - name: Show current state
        run: |
          echo "üìã Repository state:"
          echo "Branches:"
          git branch -a
          echo ""
          echo "Tags:"
          git tag --list
          echo ""
          echo "Target: ${{ github.event.inputs.version }}-${{ github.event.inputs.hotfix-suffix }}"
          
      - name: Manually create hotfix branch
        run: |
          HOTFIX_BRANCH="hotfix/${{ github.event.inputs.version }}-${{ github.event.inputs.hotfix-suffix }}"
          
          echo "üåø Creating hotfix branch manually: $HOTFIX_BRANCH"
          echo "üìç From tag: ${{ github.event.inputs.version }}"
          
          # Delete if exists
          git push origin --delete $HOTFIX_BRANCH 2>/dev/null || true
          git branch -D $HOTFIX_BRANCH 2>/dev/null || true
          
          # Create from tag
          git checkout -b $HOTFIX_BRANCH ${{ github.event.inputs.version }}
          
          # Add sample hotfix
          echo "" >> src/index.js
          echo "// HOTFIX: Critical fix applied on $(date)" >> src/index.js
          echo "function hotfixFor${{ github.event.inputs.version }}() {" >> src/index.js
          echo "  console.log('üîß Hotfix ${{ github.event.inputs.version }}-${{ github.event.inputs.hotfix-suffix }} applied');" >> src/index.js
          echo "  return true;" >> src/index.js
          echo "}" >> src/index.js
          
          git add .
          git commit -m "üîß Apply critical hotfix for ${{ github.event.inputs.version }}

Critical security fix:
- Patch vulnerability in authentication
- Update validation logic
- Ready for propagation"
          
          git push origin $HOTFIX_BRANCH
          echo "‚úÖ Hotfix branch created and pushed: $HOTFIX_BRANCH"
          
      - name: Test propagate-merger auto-merge
        id: auto-merge
        continue-on-error: true
        uses: egoavara/propagate-merger@v0.0.2
        with:
          mode: auto-merge
          version: ${{ github.event.inputs.version }}
          hotfix-suffix: ${{ github.event.inputs.hotfix-suffix }}
          github-token: ${{ secrets.GH_PAT || github.token }}
          
      - name: Show merge results
        run: |
          echo "üéØ Propagation Results:"
          echo "Status: ${{ steps.auto-merge.outcome }}"
          
          if [ "${{ steps.auto-merge.outcome }}" = "success" ]; then
            echo "‚úÖ Auto-merge succeeded!"
            echo "Result: ${{ steps.auto-merge.outputs.propagation-result }}"
            echo "Successful: ${{ steps.auto-merge.outputs.successful-branches }}"
            echo "Failed: ${{ steps.auto-merge.outputs.failed-branches }}"
          else
            echo "‚ùå Auto-merge failed"
            echo "Manual merge may be needed"
          fi
          
      - name: Check final state
        run: |
          echo "üìä Final state:"
          git checkout main
          echo "Recent commits on main:"
          git log --oneline -n 5
          echo ""
          echo "All branches:"
          git branch -a